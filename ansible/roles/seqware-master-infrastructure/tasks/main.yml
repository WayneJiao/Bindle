---
# file: roles/seqware-master-infrastructure/tasks/main.yml

- name:  Install Hadoop for a master
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  register: oozie_installed
  with_items: 
    - hadoop-0.20-mapreduce-jobtracker
    - hadoop-client
    - hadoop-hdfs-namenode
    - hue
    - hue-server
    - hue-plugins
    - hue-oozie
    - oozie
    - oozie-client
    - hbase
    - hbase-master
    - tree
    
- name:  Install Hadoop for a single-node master
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  with_items: 
    - hadoop-0.20-mapreduce-tasktracker 
    - hadoop-hdfs-datanode
    - hadoop-client
    - hbase-regionserver
  when: single_node

- name:  Install zookeeper
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  with_items: 
    - zookeeper
    - zookeeper-server 

- name:  Initialize zookeeper
  command: service zookeeper-server init creates=/var/lib/zookeeper/version-2

- name:  Start zookeeper
  service: name=zookeeper-server state=started

- name:  Install tomcat
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  with_items: 
    - tomcat7-common
    - tomcat7

- name:  Install apache2
  apt: pkg=apache2 state=present update_cache=yes cache_valid_time=3600

- name:  Copy resources
  copy: 
    src: hadoop-files/conf.my_cluster
    dest: /etc/hadoop/
  register: hadoopconfig
  
- name:  Set up Hadoop configuration
  command: 'update-alternatives --install /etc/hadoop/conf hadoop-conf /etc/hadoop/conf.my_cluster 50'
  when: hadoopconfig.changed

- name:  Set up Hadoop configuration
  command: 'update-alternatives --set hadoop-conf /etc/hadoop/conf.my_cluster'
  when: hadoopconfig.changed

- name: Format the namenode
  shell: creates=/usr/lib/hadoop/namenode.formatted su - hdfs -c "hadoop namenode -format" && touch /usr/lib/hadoop/namenode.formatted
  register: namenode_format

- name:  Start HDFS
  service: name=hadoop-hdfs-namenode state=started

- name:  Start HDFS datanode
  service: name=hadoop-hdfs-datanode state=started
  when: single_node
  
  #hmmm, no module for hadoop file operations
- name:  Setup HDFS Shared Storage
  sudo: yes
  sudo_user: hdfs
  command: $item
  when: namenode_format.changed
  with_items: 
    - hadoop fs -mkdir /tmp
    - hadoop fs -chmod -R 1777 /tmp
    - hadoop fs -mkdir -p /var/lib/hadoop-hdfs/cache/mapred/mapred/staging
    - hadoop fs -chmod 1777 /var/lib/hadoop-hdfs/cache/mapred/mapred/staging
    - hadoop fs -chown -R mapred /var/lib/hadoop-hdfs/cache/mapred
    - hadoop fs -mkdir /tmp/mapred/system
    - hadoop fs -chown mapred:hadoop /tmp/mapred/system
    - hadoop fs -mkdir -p /tmp/hadoop-mapred/mapred
    - hadoop fs -chmod -R a+wrx /tmp/hadoop-mapred/mapred
  
- name:  Start JobTracker
  service: name=hadoop-0.20-mapreduce-jobtracker state=started

- name:  Start TaskTracker
  service: name=hadoop-0.20-mapreduce-tasktracker state=started
  when: single_node
  
- name:  Hue
  file: state=link src=/usr/lib/hadoop/lib dest=/usr/share/hue/desktop/libs/hadoop/java-lib/hue*jar
  
- name:  Hue 
  service: name=hue state=started

- name:  Make Oozie database user
  sudo_user: postgres
  postgresql_user: user=oozie password=oozie role_attr_flags=NOSUPERUSER,INHERIT,CREATEDB,NOCREATEROLE state=present encrypted=yes
  
- name:  Make Oozie database in postgres
  sudo_user: postgres
  postgresql_db: db=oozie owner=oozie encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8'  state=present template='template0'
  
  # TODO: make this idempotent by using proper file modules 
- name:  Oozie 
  when: oozie_installed.changed
  notify: restart oozie
  command: $item
  with_items:
    - wget -q http://extjs.com/deploy/ext-2.2.zip
    - unzip ext-2.2.zip
    - mv ext-2.2 /var/lib/oozie/
    - perl -pi -e "s/org.apache.derby.jdbc.EmbeddedDriver/org.postgresql.Driver/;" /etc/oozie/conf/oozie-site.xml
    - perl -pi -e "s/jdbc:derby:.*create=true/jdbc:postgresql:\/\/localhost:5432\/oozie/;" /etc/oozie/conf/oozie-site.xml
    - perl -0pi -e "s/<name>oozie.service.JPAService.jdbc.username<\/name>[.\s]*<value>sa<\/value>/<name>oozie.service.JPAService.jdbc.username<\/name><value>oozie<\/value>/;" /etc/oozie/conf/oozie-site.xml
    - perl -0pi -e "s/<name>oozie.service.JPAService.jdbc.password<\/name>[.\s]*<value> <\/value>/<name>oozie.service.JPAService.jdbc.password<\/name><value>oozie<\/value>/;" /etc/oozie/conf/oozie-site.xml
    - sudo -u oozie /usr/lib/oozie/bin/ooziedb.sh create -run
    
- name:  Oozie started for variable registration 
  service: name=oozie state=started

- name:  Register Oozie SGE Home Dir
  shell: 'ps -fww -u oozie | grep -oE "\-Doozie\.home\.dir=\S+" | grep -oE "/\S+"'
  register: oozie_home_dir
  changed_when: False
  
- name:  Register Oozie SGE Conf Dir
  shell: 'ps -fww -u oozie | grep -oE "\-Doozie\.config\.dir=\S+" | grep -oE "/\S+"'
  register: oozie_conf_dir
  changed_when: False

- name:  Register qsub path
  command: which qsub
  register: qsub_path
  changed_when: False
  
- name:  Copy Oozie Config
  copy: 
    src: oozie-site.xml
    dest: '{{ oozie_conf_dir.stdout }}/oozie-site.xml'
  notify: restart oozie

- name:  Create Oozie web dir
  file: state=directory path={{ oozie_home_dir.stdout }}/webapps/oozie/WEB-INF/lib 
  
- name:  Download Oozie-SGE 
  get_url: url={{ item.url }} dest={{ oozie_home_dir.stdout }}/webapps/oozie/WEB-INF/lib mode=0555
  with_items:
     - { url: 'http://wrench.res.oicr.on.ca/artifactory/seqware-dependencies/io/seqware/oozie-sge/1.0.2/oozie-sge-1.0.2.jar' }
     - { url: 'http://repo1.maven.org/maven2/org/apache/commons/commons-exec/1.1/commons-exec-1.1.jar' }
  notify: restart oozie

- name:  Oozie SGE Logging
  lineinfile: 
    dest: '{{ oozie_conf_dir.stdout }}/oozie-log4j.properties'
    create: no
    line: log4j.logger.io.seqware.oozie.action.sge=DEBUG, oozie
    state: present
    insertafter: EOF
  notify: restart oozie
  
- name:  Oozie Sudoers
  lineinfile: 
    dest: /etc/sudoers
    create: no
    line: $item
    state: present
    insertafter: EOF
  with_items: 
      - 'oozie ALL=(ALL) NOPASSWD: {{ qsub_path.stdout  }}'
      - 'oozie ALL=(ALL) NOPASSWD: ALL'
      - 'seqware ALL=(ALL) NOPASSWD: ALL'
  notify: restart oozie

# TODO: need hdfs-site.xml configured properly using alternatives, but for now just copy it 
- name:  Copy HBase Config
  copy: 
    src: hadoop-files/conf.my_cluster/hbase-site.xml
    dest: /etc/hbase/conf/hbase-site.xml
  register: hbaseconfig
  
#hmmm, no module for hadoop file operations
- name:  Setup HBase Shared Storage
  sudo: yes
  sudo_user: hdfs
  command: $item
  when: hbaseconfig.changed
  with_items: 
    - hadoop fs -mkdir /hbase
    - hadoop fs -chown hbase /hbase

- name:  HBase
  service: name=hbase-master state=started
  
- name:  Setup daemons to start on boot
  service: name={{ item }} state=started enabled=yes
  with_items: 
    - apache2
    - cron
    - hadoop-hdfs-namenode
    - hadoop-0.20-mapreduce-jobtracker
    - hue
    - oozie
    - postgresql
    - hbase-master

- name:  Setup single-node daemons to start on boot
  service: name={{ item }} state=started enabled=yes
  with_items: 
    - hadoop-hdfs-datanode
    - hadoop-0.20-mapreduce-tasktracker
  when: single_node == True
  
- name:  Install NFS
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  with_items: 
    - rpcbind
    - nfs-kernel-server
  
- name:  Template NFS exports
  template: src=exports.j2 dest=/etc/exports
  register: nfs_setup

- name:  Setup NFS
  sudo: yes
  command: exportfs -ra
  when: nfs_setup.changed
  
- name:  NFS Restart
  service: name=portmap state=restarted
  when: nfs_setup.changed
  
- name:  NFS Restart
  service: name=nfs-kernel-server state=restarted
  when: nfs_setup.changed

- name:  Template init script
  template: src=hadoop-init-master.j2 dest=/etc/init.d/hadoop-init
    
- name:  Set up init script permissions
  file: path=/etc/init.d/hadoop-init owner=root group=root mode=0755

- name:  Setup init script for boot
  service: name=hadoop-init enabled=yes

